  
variables:
  system.debug: true
  vcpkgLocation: $(Build.SourcesDirectory)/external/vcpkg

pr:
- master
- dev/*
trigger:
- master
- dev/*

jobs:

- job: VS2019_x86
  pool:
    vmImage: windows-2019
  steps:
    - checkout: self
      submodules: recursive

 

    - task: Cache@2
      displayName: 'Cache vcpkg'
      inputs:
        key: '$(Build.SourcesDirectory)/vcpkg-x86-windows.txt | $(Build.SourcesDirectory)/.git/modules/external/vcpkg/HEAD | "$(Agent.OS)"'
        path: '$(vcpkgLocation)'

    - task: run-vcpkg@0
      displayName: 'Run vcpkg'
      inputs:
        vcpkgDirectory: '$(vcpkgLocation)'
        vcpkgArguments: '@$(Build.SourcesDirectory)/vcpkg-x86-windows.txt'
   
    - task: run-cmake@0
      displayName: 'Run CMake with CMakeSettings.json'
      inputs:
        cmakeListsOrSettingsJson: 'CMakeSettingsJson'
        useVcpkgToolchainFile: true
        configurationRegexFilter: 'x86-Debug'

    - task: Bash@3
      displayName: 'Run CTest'
      inputs:
        targetType: 'inline'
        workingDirectory: $(Build.ArtifactStagingDirectory)/x86-Debug
        script: 'ctest -V'

    
- job: Linux_x64
  pool:
    vmImage: 'ubuntu-latest'

  steps:
    - checkout: self
      submodules: recursive
    
    - script: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        sudo apt-get update -y -q
        sudo apt-get install dialog apt-utils -y
        sudo apt-get install gcc-9 g++-9 -y
        echo "##vso[task.setvariable variable=CC]`which gcc-9`"
        echo "##vso[task.setvariable variable=CXX]`which g++-9`"

    - task: Cache@2
      displayName: Cache vcpkg
      inputs:
        key: $(Build.SourcesDirectory)/vcpkg-x64-linux.txt | $(Build.SourcesDirectory)/.git/modules/external/vcpkg/HEAD | "$(Agent.OS)"
        path: '$(vcpkgLocation)'

    - task: run-vcpkg@0
      displayName: 'Run vcpkg'
      inputs:
        vcpkgDirectory: '$(vcpkgLocation)'
        vcpkgArguments: '@$(Build.SourcesDirectory)/vcpkg-x64-linux.txt'
        
    - task: run-cmake@0
      displayName: 'Run CMake with CMakeSettings.json'
      inputs:
        cmakeListsOrSettingsJson: 'CMakeSettingsJson'
        useVcpkgToolchainFile: true
        configurationRegexFilter: 'WSL-GCC-Release'

    - task: Bash@3
      displayName: 'Run CTest'
      inputs:
        targetType: 'inline'
        workingDirectory: $(Build.ArtifactStagingDirectory)/WSL-GCC-Release
        script: 'ctest -V'

